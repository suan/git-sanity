#!/usr/bin/env bash

# Possible formats:
# (t|b|bug_|task_|)1234((_|)_short_description|)

function die {
  if [[ $1 ]]; then
    echo $1 >&2
  else
    echo "Usage: $0 [-p|--pretty|-l|--link|-o|--open]" >&2
  fi
  exit 1
}

function get_url {
  url_pattern=`git config --get sanity.tasksurl`
  [[ $url_pattern =~ "<>" ]] || die "bad tasks url format"
  url=${url_pattern/<>/$task_number}
}

function get_description {
  local raw_description=${branch/$task_number_token/}
  description=${raw_description//_/ }   # replace all underscores with spaces
  description=`echo $description | sed -e 's/^[-_ ]*//g'`   # sanitize start of string
  description=`echo $description | sed -e 's/[-_ ]*$//g'`   # sanitize end of string
}


[[ $# < 3 ]] || die



last_arg="${@: -1}"
if ! [[ "$last_arg" == "" ]] && ! [[ "$last_arg" == -* ]]; then
  branch=$last_arg
else
  branch=`git-current-branch`
fi

# See if task number is at start of branch name
[[ $branch =~ ^(t|b|bug_|task_)?([0-9]+) ]]
task_number="${BASH_REMATCH[2]}"
task_number_token="${BASH_REMATCH[1]}${BASH_REMATCH[2]}"

# See if it's at the end
if [[ $task_number -eq "" ]]; then
  [[ $branch =~ (^|_|-)(t|b|bug_|task_)([0-9]+)$ ]]
  task_number="${BASH_REMATCH[3]}"
  task_number_token="${BASH_REMATCH[2]}${BASH_REMATCH[3]}"
fi



if [[ $task_number -eq "" ]]; then
  if [[ $1 == "-p" ]] || [[ $1 == "--pretty" ]]; then
    get_description
    echo $description
  else
    die "No task number detected"
  fi

else
  get_url
  if [[ $1 == "-l" ]] || [[ $1 == "--link" ]]; then
    echo $url
  elif [[ $1 == "-p" ]] || [[ $1 == "--pretty" ]]; then
    get_description
    echo "Task $task_number: $description"
  elif [[ $1 == "-o" ]] || [[ $1 == "--open" ]]; then
    if hash local-open 2>/dev/null; then
      open_cmd=`which local-open`
    elif hash xdg-open 2>/dev/null; then
      open_cmd=`which xdg-open`
    else
      open_cmd=`which open`
    fi

    $open_cmd $url
  else
    echo $task_number
  fi
fi

